services:
  postgres:
    image: postgres:15-alpine
    container_name: pricetrackr-db
    env_file: ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-pricetrackr}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testpassword}
      POSTGRES_DB: ${POSTGRES_DB:-pricetrackr}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pricetrackr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pricetrackr"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: pricetrackr-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pricetrackr-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: pricetrackr-backend
    env_file: ./.env
    volumes:
      - ../backend:/app 
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-pricetrackr}:${POSTGRES_PASSWORD:-testpassword}@postgres:5432/${POSTGRES_DB:-pricetrackr}
      REDIS_URL: redis://redis:6379/0
      CORS_ORIGINS: http://localhost:5000,http://localhost:3000
      VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
      VAPID_CLAIMS_EMAIL: ${VAPID_CLAIMS_EMAIL}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pricetrackr-network
    restart: unless-stopped

  worker:
    build:
      context: ../worker
      dockerfile: Dockerfile
    container_name: pricetrackr-worker
    env_file: ./.env
    volumes:                 
      - ../worker:/app       
    environment:
      REDIS_URL: redis://redis:6379/0
      DATABASE_URL: postgresql://${POSTGRES_USER:-pricetrackr}:${POSTGRES_PASSWORD:-testpassword}@postgres:5432/${POSTGRES_DB:-pricetrackr} 
      PYTHONPATH: /app
      VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
      VAPID_CLAIMS_EMAIL: ${VAPID_CLAIMS_EMAIL}         
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - pricetrackr-network
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      # --- THIS IS THE SYNTAX CHANGE ---
      # Use dictionary format for args
      args:
        VITE_VAPID_PUBLIC_KEY: ${VITE_VAPID_PUBLIC_KEY}
    # This path assumes .env is in the infra/ folder
    env_file: ./.env 
    container_name: pricetrackr-frontend
    ports:
      - "5000:80"
    depends_on:
      - backend
    networks:
      - pricetrackr-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  pricetrackr-network:
    driver: bridge