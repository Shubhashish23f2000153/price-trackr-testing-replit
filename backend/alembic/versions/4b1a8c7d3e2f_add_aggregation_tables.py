# backend/alembic/versions/4b1a8c7d3e2f_add_aggregation_tables.py
"""Add price history aggregation tables

Revision ID: 4b1a8c7d3e2f
Revises: 3a5b7c9d1e8f
Create Date: 2025-11-01 09:30:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4b1a8c7d3e2f'
down_revision: Union[str, None] = '3a5b7c9d1e8f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. Create price_history_daily table
    op.create_table('price_history_daily',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_source_id', sa.Integer(), nullable=False),
    sa.Column('day', sa.Date(), nullable=False),
    sa.Column('min_cents', sa.Integer(), nullable=False),
    sa.Column('max_cents', sa.Integer(), nullable=False),
    sa.Column('avg_cents', sa.Integer(), nullable=False),
    sa.Column('last_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('samples', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_source_id'], ['product_sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_source_id', 'day', name='_daily_product_source_day_uc')
    )
    op.create_index(op.f('ix_price_history_daily_day'), 'price_history_daily', ['day'], unique=False)
    op.create_index(op.f('ix_price_history_daily_id'), 'price_history_daily', ['id'], unique=False)

    # 2. Create price_history_monthly table
    op.create_table('price_history_monthly',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_source_id', sa.Integer(), nullable=False),
    sa.Column('month', sa.Date(), nullable=False),
    sa.Column('min_cents', sa.Integer(), nullable=False),
    sa.Column('max_cents', sa.Integer(), nullable=False),
    sa.Column('avg_cents', sa.Integer(), nullable=False),
    sa.Column('last_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('samples', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_source_id'], ['product_sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_source_id', 'month', name='_monthly_product_source_month_uc')
    )
    op.create_index(op.f('ix_price_history_monthly_id'), 'price_history_monthly', ['id'], unique=False)
    op.create_index(op.f('ix_price_history_monthly_month'), 'price_history_monthly', ['month'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. Drop price_history_monthly table
    op.drop_index(op.f('ix_price_history_monthly_month'), table_name='price_history_monthly')
    op.drop_index(op.f('ix_price_history_monthly_id'), table_name='price_history_monthly')
    op.drop_table('price_history_monthly')
    
    # 2. Drop price_history_daily table
    op.drop_index(op.f('ix_price_history_daily_id'), table_name='price_history_daily')
    op.drop_index(op.f('ix_price_history_daily_day'), table_name='price_history_daily')
    op.drop_table('price_history_daily')
    
    # ### end Alembic commands ###